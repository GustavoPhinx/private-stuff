{"version":3,"sources":["HttpService/HttpService.ts","context/AppContext.tsx","components/AnalyticsGraphic/AnalyticsGraphic.tsx","components/BasicCompanyInformation/BasicCompanyInformation.tsx","api/endpoints/Assignees/path.ts","HttpService/FetchHttpService.ts","HttpService/RESTEndpoint.ts","HttpService/EndpointManager.ts","HttpService/Api.ts","HttpService/react/context/ApiReactContext.tsx","HttpService/react/hooks/useApiEndpoint.ts","HttpService/react/hooks/useApiFind.ts","api/endpoints/Assignees/useFindAssignees.ts","containers/Analytics/Analytics.tsx","utils/buildQueryToGetPatentsByYear.ts","components/SearchBox/SearchBox.tsx","components/ListResults/ListResults.tsx","containers/SearchCompany/SearchCompany.tsx","utils/buildQueryToSearchCompany.ts","App.tsx","api/AppApi.ts","config/config.ts","reportWebVitals.ts","index.tsx"],"names":["METHOD","AppContext","createContext","AppContextProvider","children","useState","companyData","setCompanyData","companyYearlyPatents","setCompanyYearlyPatents","companyPatents","setCompanyPatents","value","useMemo","Provider","useAppContext","useContext","AnalyticsGraphic","state","setstate","useEffect","options","chart","id","xaxis","categories","years","map","year_id","Number","sort","series","name","data","obj","year_num_patents_for_assignee","type","width","BasicCompanyInformation","PATH","defaultHttpServiceConfig","baseUrl","headers","HttpService","initialConfig","config","onSuccess","onError","this","method","url","a","doCall","response","execute","GET","body","POST","PUT","PATCH","DELETE","FetchHttpService","fetch","JSON","stringify","undefined","credentials","text","status","parse","statusCode","error","getQueryString","query","Object","entries","key","join","RESTEndpoint","path","_httpService","Error","suffix","keys","length","httpService","get","getFullPathWithQuery","assetType","post","put","delete","EndpointManager","endpoints","Map","RESTEndpointClass","set","has","Api","endpointManager","init","HttpConfiguredService","getHttpService","register","instance","RESTEndpointConfigured","ApiContext","api","ApiContextProvider","apiRef","useRef","current","useApiContext","useApiEndpoint","getEndpoint","useApiFind","ServiceEndpoint","queryOption","setData","setError","loading","setLoading","call","useCallback","opts","queryToUse","find","useFindAssignees","Analytics","company","assignee_id","q","_and","f","assignees","Grid","container","height","alignItems","flexDirection","item","xl","md","xs","marginTop","Typography","variant","fontWeight","SearchBox","searchValue","handleChange","handleKeyPress","handleSearch","FormControl","fullWidth","InputLabel","htmlFor","OutlinedInput","label","onChange","onKeyPress","endAdornment","InputAdornment","position","IconButton","onClick","edge","SearchOutlined","ListResults","searchResults","handleClick","ListContainer","List","sx","maxWidth","bgcolor","overflow","maxHeight","ListItem","disablePadding","ListItemButton","ListItemIcon","Business","ListItemText","primary","assignee_organization","secondary","assignee_total_num_patents","styled","div","SearchCompany","setSearchValue","navigate","useNavigate","_or","_contains","assignee_first_name","assignee_last_name","o","per_page","matched_subentities_only","sort_by_subentity_counts","page","s","patent_id","justifyContent","MainContainer","SearchBoxContainer","e","code","target","App","element","registerEndpoint","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","AppApi","document","getElementById"],"mappings":"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","file":"static/js/main.d3ab467f.chunk.js","sourcesContent":["// this duplication it's to decouple with the rest of the application\r\ninterface AnyObject {\r\n\t[k: string]: any;\r\n}\r\n\r\nexport interface HttpServiceConfig {\r\n\tbaseUrl?: string;\r\n\theaders?: AnyObject;\r\n\tcredentials?: string;\r\n}\r\n\r\nexport interface ExecuteOptions {\r\n\tbody?: AnyObject;\r\n\theaders?: AnyObject;\r\n}\r\n\r\nexport interface ExecuteResponse<T> {\r\n\tdata: T | null | undefined;\r\n\tstatusCode: number;\r\n\theaders: AnyObject;\r\n\terror?: any;\r\n}\r\n\r\nexport enum METHOD {\r\n\tGET = \"GET\",\r\n\tPOST = \"POST\",\r\n\tPUT = \"PUT\",\r\n\tPATCH = \"PATCH\",\r\n\tDELETE = \"DELETE\",\r\n}\r\n\r\nexport const defaultHttpServiceConfig: HttpServiceConfig = {\r\n\tbaseUrl: \"\",\r\n\theaders: {},\r\n};\r\n\r\nexport abstract class HttpService {\r\n\tprotected config: HttpServiceConfig;\r\n\tonSuccess?: <T = any>(response: ExecuteResponse<T>) => void | Promise<void>;\r\n\tonError?: <T = any>(response: ExecuteResponse<T> | any) => void | Promise<void>;\r\n\r\n\tconstructor(initialConfig?: Partial<HttpServiceConfig>) {\r\n\t\tthis.config = { ...defaultHttpServiceConfig, ...initialConfig };\r\n\t}\r\n\r\n\tset Headers(headers: AnyObject) {\r\n\t\tthis.config.headers = headers;\r\n\t}\r\n\r\n\tget Headers() {\r\n\t\treturn this.config.headers || {};\r\n\t}\r\n\r\n\tprotected abstract doCall<T = any>(\r\n\t\tmethod: METHOD,\r\n\t\turl: string,\r\n\t\toptions?: ExecuteOptions\r\n\t): Promise<ExecuteResponse<T>>;\r\n\r\n\tasync execute<T = any>(method: METHOD, url: string, options?: ExecuteOptions): Promise<ExecuteResponse<T>> {\r\n\t\ttry {\r\n\t\t\tconst response = await this.doCall<T>(method, url, options);\r\n\t\t\tif (this.onSuccess) {\r\n\t\t\t\tawait this.onSuccess(response);\r\n\t\t\t}\r\n\t\t\treturn response;\r\n\t\t} catch (e: any) {\r\n\t\t\tif (this.onError) {\r\n\t\t\t\tawait this.onError(e);\r\n\t\t\t}\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\tasync get<T = any>(url: string, options?: ExecuteOptions) {\r\n\t\treturn this.execute<T>(METHOD.GET, url, options);\r\n\t}\r\n\r\n\tasync post<T = any>(url: string, body: AnyObject, options?: Omit<ExecuteOptions, \"body\">) {\r\n\t\treturn this.execute<T>(METHOD.POST, url, options ? { ...options, body } : { body });\r\n\t}\r\n\r\n\tasync put<T = any>(url: string, body: AnyObject, options?: Omit<ExecuteOptions, \"body\">) {\r\n\t\treturn this.execute<T>(METHOD.PUT, url, options ? { ...options, body } : { body });\r\n\t}\r\n\r\n\tasync patch<T = any>(url: string, body: AnyObject, options?: Omit<ExecuteOptions, \"body\">) {\r\n\t\treturn this.execute<T>(METHOD.PATCH, url, options ? { ...options, body } : { body });\r\n\t}\r\n\r\n\tasync delete<T = any>(url: string, body: AnyObject, options?: Omit<ExecuteOptions, \"body\">) {\r\n\t\treturn this.execute<T>(METHOD.DELETE, url, options ? { ...options, body } : { body });\r\n\t}\r\n}\r\n","import { createContext, ReactNode, useContext, useMemo, useState } from \"react\";\r\n\r\nexport const AppContext = createContext<any>({});\r\n\r\nexport type AppContextProviderProps = {\r\n\tchildren: ReactNode;\r\n};\r\n\r\nexport const AppContextProvider = ({ children }: AppContextProviderProps) => {\r\n\tconst [companyData, setCompanyData] = useState({});\r\n\tconst [companyYearlyPatents, setCompanyYearlyPatents] = useState({});\r\n\tconst [companyPatents, setCompanyPatents] = useState({});\r\n\r\n\tconst value = useMemo(\r\n\t\t() => ({\r\n\t\t\tcompanyData,\r\n\t\t\tsetCompanyData,\r\n\t\t\tcompanyYearlyPatents,\r\n\t\t\tsetCompanyYearlyPatents,\r\n\t\t\tcompanyPatents,\r\n\t\t\tsetCompanyPatents,\r\n\t\t}),\r\n\t\t[companyData, companyYearlyPatents, companyPatents]\r\n\t);\r\n\r\n\treturn <AppContext.Provider value={value}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport const useAppContext = () => useContext<any>(AppContext);\r\n","import { useState, useEffect } from \"react\";\r\nimport { useAppContext } from \"../../context/AppContext\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\ninterface PatentsByYear {\r\n\tyear_id: string;\r\n\tyear_num_patents_for_assignee: string;\r\n}\r\nexport const AnalyticsGraphic = () => {\r\n\tconst { companyYearlyPatents } = useAppContext();\r\n\r\n\tconst [state, setstate] = useState<any>({});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetstate({\r\n\t\t\toptions: {\r\n\t\t\t\tchart: {\r\n\t\t\t\t\tid: \"year\",\r\n\t\t\t\t},\r\n\t\t\t\txaxis: {\r\n\t\t\t\t\tcategories: companyYearlyPatents?.years\r\n\t\t\t\t\t\t?.map(({ year_id }: PatentsByYear) => Number(year_id))\r\n\t\t\t\t\t\t.sort(),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tseries: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"Registered patents\",\r\n\t\t\t\t\tdata: companyYearlyPatents?.years\r\n\t\t\t\t\t\t?.map((obj: PatentsByYear) => Number(obj.year_num_patents_for_assignee))\r\n\t\t\t\t\t\t.sort(),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t}, [companyYearlyPatents]);\r\n\r\n\treturn (\r\n\t\t<div>{!!state.options && <Chart type=\"line\" options={state.options} series={state.series} width=\"500\" />}</div>\r\n\t);\r\n};\r\n","import { AnalyticsGraphic } from \"../AnalyticsGraphic\";\r\n\r\nexport const BasicCompanyInformation = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AnalyticsGraphic />\r\n\t\t</div>\r\n\t);\r\n};\r\n","export const PATH = \"/assignees/query\";\r\n","import { ExecuteOptions, ExecuteResponse, HttpService, METHOD } from \"./HttpService\";\r\n\r\nexport class FetchHttpService extends HttpService {\r\n\tasync doCall<T>(method: METHOD, url: string, options?: ExecuteOptions): Promise<ExecuteResponse<T>> {\r\n\t\tlet response: Response | undefined;\r\n\t\ttry {\r\n\t\t\tresponse = await fetch(this.config.baseUrl + url, {\r\n\t\t\t\tmethod,\r\n\t\t\t\tbody: options?.body ? JSON.stringify(options.body) : undefined,\r\n\t\t\t\theaders: options?.headers ? { ...this.config.headers, ...options.headers } : this.config.headers,\r\n\t\t\t\t...(this.config.credentials ? { credentials: this.config.credentials as RequestCredentials } : {}),\r\n\t\t\t});\r\n\t\t\tconst data = await response.text();\r\n\t\t\tif (response.status < 200 || response.status >= 300) {\r\n\t\t\t\t// eslint-disable-next-line\r\n\t\t\t\tthrow data;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tdata: JSON.parse(data),\r\n\t\t\t\tstatusCode: response.status,\r\n\t\t\t\theaders: response.headers,\r\n\t\t\t};\r\n\t\t} catch (e: any) {\r\n\t\t\tif (response) {\r\n\t\t\t\tthrow {\r\n\t\t\t\t\tdata: null,\r\n\t\t\t\t\terror: e,\r\n\t\t\t\t\tstatusCode: response.status,\r\n\t\t\t\t\theaders: response.headers,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n}\r\n","import { HttpService } from \"./HttpService\";\r\n\r\nexport type QueryObject = {\r\n\t[k: string]: string | number;\r\n};\r\n\r\nexport const getQueryString = (query: QueryObject) =>\r\n\tObject.entries(query)\r\n\t\t.map(([key, value]) => `${key}=${value}`)\r\n\t\t.join(\"&\");\r\n\r\nexport class RESTEndpoint<T = any> {\r\n\tprotected path: string;\r\n\tprotected _httpService?: HttpService;\r\n\r\n\tconstructor(path: string) {\r\n\t\tthis.path = path;\r\n\t}\r\n\r\n\tget httpService() {\r\n\t\tif (!this._httpService) {\r\n\t\t\tthrow new Error(\"Http Service not set\");\r\n\t\t}\r\n\t\treturn this._httpService;\r\n\t}\r\n\r\n\tset httpService(_httpService: HttpService) {\r\n\t\tthis._httpService = _httpService;\r\n\t}\r\n\r\n\tgetFullPathWithQuery(query: QueryObject = {}, suffix?: string) {\r\n\t\tconst url = suffix ? `${this.path}/${suffix}` : this.path;\r\n\t\tif (!Object.keys(query).length) {\r\n\t\t\treturn url;\r\n\t\t}\r\n\t\treturn `${url}?${getQueryString(query)}`;\r\n\t}\r\n\r\n\tfind(query?: QueryObject) {\r\n\t\treturn this.httpService.get<T>(this.getFullPathWithQuery(query));\r\n\t}\r\n\r\n\tcreate(body: T, assetType?: string) {\r\n\t\tconst url = assetType ? `${this.path}/${assetType}` : this.path;\r\n\t\treturn this.httpService.post<T>(url, body);\r\n\t}\r\n\r\n\tupdate(id?: string, body?: T, assetType?: string) {\r\n\t\tlet url = this.path;\r\n\t\tif (id) {\r\n\t\t\turl = `${this.path}/${id}`;\r\n\t\t} else if (assetType) {\r\n\t\t\turl = `${this.path}/${assetType}`;\r\n\t\t}\r\n\t\treturn this.httpService.put<T>(url, body || {});\r\n\t}\r\n\r\n\tremove<S = T>(id?: string, body?: T, assetType?: string) {\r\n\t\tlet url = this.path;\r\n\t\tif (id) {\r\n\t\t\turl = `${this.path}/${id}`;\r\n\t\t} else if (assetType) {\r\n\t\t\turl = `${this.path}/${assetType}`;\r\n\t\t}\r\n\t\treturn this.httpService.delete<S>(url, body || {});\r\n\t}\r\n}\r\n","import { RESTEndpoint } from \"./RESTEndpoint\";\r\n\r\ntype RESTEndpointConstructor = new (path: string) => RESTEndpoint;\r\ntype AnyObject = { [key: string]: any };\r\n\r\nexport class EndpointManager {\r\n\tprivate endpoints = new Map<string, RESTEndpointConstructor>();\r\n\tprivate options = new Map<string, AnyObject>();\r\n\r\n\tregister(path: string, RESTEndpointClass: RESTEndpointConstructor = RESTEndpoint, options: AnyObject = {}) {\r\n\t\tthis.endpoints.set(path, RESTEndpointClass);\r\n\t\tthis.options.set(path, options);\r\n\t}\r\n\r\n\tget(path: string): [RESTEndpointConstructor, AnyObject] {\r\n\t\tif (!this.endpoints.has(path)) {\r\n\t\t\tthrow new Error(`Unregistered endpoint ${path}`);\r\n\t\t}\r\n\t\treturn [this.endpoints.get(path) as RESTEndpointConstructor, this.options.get(path) as AnyObject];\r\n\t}\r\n}\r\n","import { HttpService, HttpServiceConfig } from \"./HttpService\";\r\nimport { EndpointManager } from \"./EndpointManager\";\r\n\r\nexport interface SessionConfiguration {\r\n\tname: string;\r\n\theader: string;\r\n}\r\n\r\nexport type HttpServiceConstructor = new (initialConfig?: Partial<HttpServiceConfig>) => HttpService;\r\n\r\nexport abstract class Api {\r\n\tprotected baseUrl: string;\r\n\tprotected options: Omit<HttpServiceConfig, \"baseUrl\">;\r\n\tprotected _httpService?: HttpService;\r\n\tprotected endpointManager = new EndpointManager();\r\n\r\n\tconstructor(baseUrl: string, options?: Omit<HttpServiceConfig, \"baseUrl\">) {\r\n\t\tthis.baseUrl = baseUrl;\r\n\t\tthis.options = options || {};\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tget httpService() {\r\n\t\tif (!this._httpService) {\r\n\t\t\tthrow new Error(\"Http Service not configured properly\");\r\n\t\t}\r\n\t\treturn this._httpService;\r\n\t}\r\n\r\n\tprivate init() {\r\n\t\tconst HttpConfiguredService = this.getHttpService();\r\n\t\tthis._httpService = new HttpConfiguredService({ baseUrl: this.baseUrl, ...this.options });\r\n\t\tthis.config();\r\n\t}\r\n\r\n\tprotected registerEndpoint(path: string) {\r\n\t\tthis.endpointManager.register(path);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tgetEndpoint(path: string) {\r\n\t\tconst [RESTEndpointConfigured] = this.endpointManager.get(path);\r\n\t\tconst instance = new RESTEndpointConfigured(path);\r\n\t\tinstance.httpService = this.httpService;\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tprotected abstract getHttpService(): HttpServiceConstructor;\r\n\tprotected abstract config(): void;\r\n}\r\n","import { createContext, ReactNode, useContext, useMemo, useRef } from \"react\";\r\nimport { Api } from \"../../Api\";\r\n\r\nexport interface ApiContextValue {\r\n\tapi: Api;\r\n}\r\n\r\nexport const ApiContext = createContext<ApiContextValue>({\r\n\t// @ts-ignore\r\n\tapi: null,\r\n});\r\n\r\nexport interface ApiContextProviderProps {\r\n\tapi: Api;\r\n\tchildren: ReactNode | ReactNode[];\r\n}\r\n\r\nexport const ApiContextProvider = ({ api, children }: ApiContextProviderProps) => {\r\n\tconst apiRef = useRef<Api>(api);\r\n\tconst value = useMemo<ApiContextValue>(() => ({ api: apiRef.current }), []);\r\n\treturn <ApiContext.Provider value={value}>{children}</ApiContext.Provider>;\r\n};\r\n\r\nexport const useApiContext = () => useContext<ApiContextValue>(ApiContext);\r\n","import { useRef } from 'react';\r\nimport { useApiContext } from '../context';\r\nimport { RESTEndpoint } from '../../RESTEndpoint';\r\n\r\nexport const useApiEndpoint = <S = any, T extends RESTEndpoint = RESTEndpoint<S>>(path: string): RESTEndpoint<S> => {\r\n  const { api } = useApiContext();\r\n  const endpoint = useRef<T>(api.getEndpoint(path) as T);\r\n  return endpoint.current;\r\n};\r\n","import { useApiEndpoint } from \"./useApiEndpoint\";\r\nimport { useCallback, useRef, useState } from \"react\";\r\nimport { QueryObject } from \"../../RESTEndpoint\";\r\n\r\nexport interface ApiFindOptions {\r\n\tquery?: QueryObject;\r\n}\r\n\r\nexport interface ApiFindReturn<T> {\r\n\tdata: T | null | undefined;\r\n\terror?: any;\r\n\tloading: boolean;\r\n\tcall: (opts?: ApiFindOptions) => Promise<T | null | undefined>;\r\n}\r\n\r\nexport const useApiFind = <T = any>(path: string, options: ApiFindOptions = {}): ApiFindReturn<T> => {\r\n\tconst ServiceEndpoint = useApiEndpoint<T>(path);\r\n\t// Refs\r\n\tconst queryOption = useRef<QueryObject | undefined>(options.query);\r\n\r\n\t// Inner state\r\n\tconst [data, setData] = useState<T | null | undefined>(undefined);\r\n\tconst [error, setError] = useState<any>(undefined);\r\n\tconst [loading, setLoading] = useState<boolean>(false);\r\n\r\n\tconst call = useCallback(\r\n\t\tasync (opts: ApiFindOptions = {}) => {\r\n\t\t\tconst { query } = opts;\r\n\t\t\ttry {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tconst queryToUse = query || queryOption.current;\r\n\t\t\t\tconst response = await ServiceEndpoint.find(queryToUse);\r\n\t\t\t\tsetError(undefined);\r\n\t\t\t\tsetData(response.data);\r\n\t\t\t\treturn response.data;\r\n\t\t\t} catch (e: any) {\r\n\t\t\t\tsetData(undefined);\r\n\t\t\t\tsetError(e.error);\r\n\t\t\t\tthrow e;\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[ServiceEndpoint]\r\n\t);\r\n\r\n\treturn { data, loading, error, call };\r\n};\r\n","import { PATH } from \"./path\";\r\nimport { ApiFindOptions, useApiFind } from \"../../../HttpService\";\r\n\r\nexport const useFindAssignees = (options: ApiFindOptions = {}) => useApiFind<any>(PATH, options);\r\n","import { useEffect } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { useAppContext } from \"../../context/AppContext\";\r\nimport { buildQueryToGetPatentsByYear } from \"../../utils\";\r\nimport { BasicCompanyInformation } from \"../../components/BasicCompanyInformation\";\r\nimport { useFindAssignees } from \"../../api/endpoints/Assignees/useFindAssignees\";\r\n\r\nexport const Analytics = () => {\r\n\tconst { companyData, setCompanyYearlyPatents } = useAppContext();\r\n\tconst { call } = useFindAssignees();\r\n\r\n\tuseEffect(() => {\r\n\t\t(async () => {\r\n\t\t\tif (companyData) {\r\n\t\t\t\tconst query = buildQueryToGetPatentsByYear(companyData.assignee_id);\r\n\t\t\t\tconst data = await call({ query });\r\n\t\t\t\tsetCompanyYearlyPatents(data.assignees[0]);\r\n\t\t\t}\r\n\t\t})();\r\n\t}, [companyData, call, setCompanyYearlyPatents]);\r\n\r\n\treturn (\r\n\t\t<Grid container height=\"100vh\" alignItems=\"center\" flexDirection=\"column\">\r\n\t\t\t<Grid item xl={5} md={7} xs={12} marginTop={5}>\r\n\t\t\t\t<Typography variant=\"h2\" fontWeight=\"bold\">\r\n\t\t\t\t\tPatent analytics beta\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xl={5} md={7} xs={12}>\r\n\t\t\t\t<BasicCompanyInformation />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n","export const buildQueryToGetPatentsByYear = (company: string): any => ({\r\n\tq: JSON.stringify({ _and: [{ assignee_id: company }] }),\r\n\tf: JSON.stringify([\"year_id\", \"year_num_patents_for_assignee\"]),\r\n});\r\n","import { ChangeEvent, KeyboardEvent } from \"react\";\r\nimport { FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput } from \"@mui/material\";\r\nimport { SearchOutlined } from \"@mui/icons-material\";\r\n\r\ninterface SearchBoxProps {\r\n\tsearchValue: string;\r\n\thandleSearch: () => void;\r\n\thandleKeyPress: (e: KeyboardEvent<HTMLInputElement>) => void;\r\n\thandleChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const SearchBox = ({ searchValue, handleChange, handleKeyPress, handleSearch }: SearchBoxProps) => {\r\n\treturn (\r\n\t\t<FormControl fullWidth variant=\"outlined\">\r\n\t\t\t<InputLabel htmlFor=\"outlined-search-box\">Search for a company and press Enter...</InputLabel>\r\n\t\t\t<OutlinedInput\r\n\t\t\t\tfullWidth\r\n\t\t\t\tid=\"outlined-search-box\"\r\n\t\t\t\tlabel=\"Search for a company and press Enter...\"\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tvalue={searchValue}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tonKeyPress={handleKeyPress}\r\n\t\t\t\tendAdornment={\r\n\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t<IconButton aria-label=\"loop search icon\" onClick={handleSearch} edge=\"end\">\r\n\t\t\t\t\t\t\t<SearchOutlined />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t</FormControl>\r\n\t);\r\n};\r\n","import styled from \"styled-components\";\r\nimport { List, ListItem, ListItemButton, ListItemIcon, ListItemText } from \"@mui/material\";\r\nimport { Business } from \"@mui/icons-material\";\r\n\r\ninterface ListResultProps {\r\n\tsearchResults: any[];\r\n\thandleClick: (company: any) => void;\r\n}\r\n\r\nexport const ListResults = ({ searchResults, handleClick }: ListResultProps) => {\r\n\treturn (\r\n\t\t<ListContainer>\r\n\t\t\t<List\r\n\t\t\t\tsx={{\r\n\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\tmaxWidth: \"inherit\",\r\n\t\t\t\t\tbgcolor: \"background.paper\",\r\n\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\toverflow: \"auto\",\r\n\t\t\t\t\tmaxHeight: 300,\r\n\t\t\t\t}}>\r\n\t\t\t\t{searchResults.map((company) => (\r\n\t\t\t\t\t<ListItem key={company.assignee_id} onClick={() => handleClick(company)} disablePadding>\r\n\t\t\t\t\t\t<ListItemButton>\r\n\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t<Business />\r\n\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\tprimary={company.assignee_organization}\r\n\t\t\t\t\t\t\t\tsecondary={`Number of patents: ${company.assignee_total_num_patents}`}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ListItemButton>\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))}\r\n\t\t\t</List>\r\n\t\t</ListContainer>\r\n\t);\r\n};\r\n\r\nconst ListContainer = styled.div`\r\n\tpadding: 2px;\r\n\tborder-radius: 5px;\r\n\tbackground-color: #1976d2;\r\n\tmax-height: 300;\r\n\tmargin-top: 10px;\r\n`;\r\n","import { ChangeEvent, useState, KeyboardEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { SearchBox } from \"../../components/SearchBox\";\r\nimport { ListResults } from \"../../components/ListResults\";\r\nimport { useFindAssignees } from \"../../api/endpoints/Assignees/useFindAssignees\";\r\nimport { useAppContext } from \"../../context/AppContext\";\r\nimport { buildQueryToSearchCompany } from \"../../utils\";\r\n\r\nexport const SearchCompany = () => {\r\n\tconst [searchValue, setSearchValue] = useState(\"\");\r\n\tconst navigate = useNavigate();\r\n\tconst { setCompanyData } = useAppContext();\r\n\tconst { call, data } = useFindAssignees();\r\n\r\n\tconst handleSearch = async () => {\r\n\t\tif (!searchValue) return;\r\n\t\tconst query = buildQueryToSearchCompany(searchValue);\r\n\t\tcall({ query });\r\n\t};\r\n\r\n\tconst handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetSearchValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.code === \"Enter\") {\r\n\t\t\thandleSearch();\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (company: any) => {\r\n\t\tsetCompanyData(company);\r\n\t\tnavigate(\"/analytics\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container height=\"100vh\" justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t<Grid item xl={5} md={7} xs={12}>\r\n\t\t\t\t<MainContainer>\r\n\t\t\t\t\t<Typography variant=\"h2\" fontWeight=\"bold\">\r\n\t\t\t\t\t\tPatent analytics beta\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography>Track a company's patents from application to expiration</Typography>\r\n\t\t\t\t\t<SearchBoxContainer>\r\n\t\t\t\t\t\t<SearchBox\r\n\t\t\t\t\t\t\thandleSearch={handleSearch}\r\n\t\t\t\t\t\t\tsearchValue={searchValue}\r\n\t\t\t\t\t\t\thandleKeyPress={handleKeyPress}\r\n\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SearchBoxContainer>\r\n\t\t\t\t\t{!!data?.assignees?.length && (\r\n\t\t\t\t\t\t<ListResults searchResults={data.assignees} handleClick={handleClick} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</MainContainer>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nconst MainContainer = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n`;\r\n\r\nconst SearchBoxContainer = styled.div`\r\n\tmargin-top: 60px;\r\n`;\r\n","export const buildQueryToSearchCompany = (company: string): any => ({\r\n\tq: JSON.stringify({\r\n\t\t_and: [\r\n\t\t\t{\r\n\t\t\t\t_or: [\r\n\t\t\t\t\t{ _and: [{ _contains: { assignee_first_name: company } }] },\r\n\t\t\t\t\t{ _and: [{ _contains: { assignee_last_name: company } }] },\r\n\t\t\t\t\t{ _and: [{ _contains: { assignee_organization: company } }] },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t],\r\n\t}),\r\n\tf: JSON.stringify([\"assignee_id\", \"assignee_organization\", \"assignee_total_num_patents\", \"patent_id\"]),\r\n\to: JSON.stringify({\r\n\t\tper_page: 10,\r\n\t\tmatched_subentities_only: true,\r\n\t\tsort_by_subentity_counts: \"patent_id\",\r\n\t\tpage: 1,\r\n\t}),\r\n\ts: JSON.stringify([\r\n\t\t{ patent_id: \"desc\" },\r\n\t\t{ assignee_total_num_patents: \"desc\" },\r\n\t\t{ assignee_organization: \"asc\" },\r\n\t\t{ assignee_last_name: \"asc\" },\r\n\t\t{ assignee_first_name: \"asc\" },\r\n\t]),\r\n});\r\n","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Analytics } from \"./containers/Analytics\";\nimport { SearchCompany } from \"./containers/SearchCompany\";\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<SearchCompany />} />\n\t\t\t\t<Route path=\"/analytics\" element={<Analytics />} />\n\t\t\t</Routes>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import { API_URL } from \"../config\";\r\nimport { Api, FetchHttpService, HttpServiceConstructor } from \"../HttpService\";\r\n\r\nclass AppApi extends Api {\r\n\tconstructor() {\r\n\t\tsuper(API_URL, { headers: { \"Content-Type\": \"application/json\" } });\r\n\t}\r\n\r\n\tprotected config(): void {\r\n\t\tthis.registerEndpoint(\"/patents/query\");\r\n\t\tthis.registerEndpoint(\"/assignees/query\");\r\n\t}\r\n\r\n\tprotected getHttpService(): HttpServiceConstructor {\r\n\t\treturn FetchHttpService;\r\n\t}\r\n}\r\n\r\nconst instance = new AppApi();\r\nexport { instance as AppApi };\r\n","export const API_URL = \"https://api.patentsview.org\";\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApiContextProvider } from \"./HttpService\";\nimport { AppApi } from \"./api\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport { AppContextProvider } from \"./context/AppContext\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ApiContextProvider api={AppApi}>\n\t\t\t<AppContextProvider>\n\t\t\t\t<App />\n\t\t\t</AppContextProvider>\n\t\t</ApiContextProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}